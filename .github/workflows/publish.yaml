on:
  workflow_dispatch:

jobs:
  tests:
    uses: ./.github/workflows/tests.yml

  changelog-version:
    runs-on: ubuntu-latest
    outputs:
      changelog: ${{ steps.changelog.outputs.changelog }}
      short_version: ${{ steps.version.outputs.version }}
      data_version: ${{ steps.version.outputs.data_version }}
      version: ${{ steps.version.outputs.version }}+${{ steps.version.outputs.data_version }}

    steps:
      - uses: actions/checkout@v5
      - id: version
        run: |
          cd gatelogue-aggregator/src
          python -c "
          from gatelogue_aggregator.__about__ import __version__, __data_version__
          print('version=v'+__version__)
          print('data_version='+str(__data_version__))
          " >> "$GITHUB_OUTPUT"

      - id: changelog
        run: |
           cd gatelogue-aggregator/src
           {
           echo 'changelog<<__EOF__'
           python -c "
           from gatelogue_aggregator.__about__ import __version__, __data_version__
           print('\n'.join(open('../../CHANGELOG.md').read().split('## v'+__version__+'+'+str(__data_version__))[1].split('\n')[1:]).split('\n##')[0])
           "
           echo __EOF__
           } >> "$GITHUB_OUTPUT"

  build-py:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: gatelogue-types-py

    steps:
    - uses: actions/checkout@v5
    - uses: pypa/hatch@install
    - run: hatch build
    - uses: actions/upload-artifact@v5
      with:
        name: dist-py
        path: gatelogue-types-py/dist

  build-rs:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: gatelogue-types-rs

    steps:
    - uses: actions/checkout@v5
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - run: cargo update
    - run: cargo package
    - uses: actions/upload-artifact@v5
      with:
        name: dist-rs
        path: gatelogue-types-rs/target/package/*.crate

  build-ts:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: gatelogue-types-ts

    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
        with:
          version: latest
      - uses: actions/setup-node@v6
        with:
          node-version: latest
          registry-url: https://registry.npmjs.org/
      - run: pnpm i
      - run: pnpm pack
      - uses: actions/upload-artifact@v5
        with:
          name: dist-ts
          path: gatelogue-types-ts/gatelogue-types-*.tgz

  github-release:
    runs-on: ubuntu-latest
    needs: [ build-py, build-rs, build-ts, changelog-version, tests ]
    permissions:
      contents: write

    steps:
      - uses: actions/download-artifact@v5
        with:
          name: dist-py
          path: dist
      - uses: actions/download-artifact@v5
        with:
          name: dist-rs
          path: dist
      - uses: actions/download-artifact@v5
        with:
          name: dist-ts
          path: dist
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.changelog-version.outputs.version }}
          body: ${{ needs.changelog-version.outputs.changelog }}
          files: dist/*

  publish-pypi:
    runs-on: ubuntu-latest
    needs: [ build-py, tests ]
    environment:
      name: pypi
      url: https://pypi.org/p/gatelogue-types
    permissions:
      id-token: write

    steps:
      - uses: actions/download-artifact@v5
        with:
          name: dist-py
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1

  publish-crates-io:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: gatelogue-types-rs
    needs: [ build-rs, tests ]

    steps:
      - uses: actions/checkout@v5
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo login "$CRATES_IO_API"
        env:
          CRATES_IO_API: ${{ secrets.CRATES_IO_API }}
      - run: cargo publish

  publish-npm:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: gatelogue-types-ts
    needs: [ build-ts, tests ]

    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
        with:
          version: latest
      - uses: actions/setup-node@v6
        with:
          node-version: latest
          registry-url: https://registry.npmjs.org/
      - run: pnpm i
      - run: pnpm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  publish-gpr:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: gatelogue-types-ts
    permissions:
      contents: read
      packages: write
    needs: [ build-ts, tests ]


    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
        with:
          version: latest
      - uses: actions/setup-node@v6
        with:
          node-version: latest
          registry-url: https://npm.pkg.github.com/
      - run: |
          cat package.json | sed "s/\"name\": \"/\"name\": \"@mrt-map\//g" > package2.json
          mv package2.json package.json
      - run: pnpm i
      - run: pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

  publish-jsr:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: gatelogue-types-ts
    permissions:
      contents: read
      id-token: write
    needs: [ build-ts, tests ]

    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
        with:
          version: latest
      - uses: actions/setup-node@v6
        with:
          node-version: latest
      - run: mv ../README.md .
      - run: pnpx jsr publish --allow-dirty

